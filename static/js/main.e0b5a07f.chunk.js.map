{"version":3,"sources":["CellContainer/Cell/random.ts","CellContainer/Cell/Cell.tsx","CellContainer/CellContainer.tsx","InfoContainer/InfoContainer.tsx","App/App.tsx","index.tsx"],"names":["generateRandomNumber","min","max","Math","floor","random","grow","keyframes","_templateObject","StyledCellPlaceholder","styled","_templateObject2","props","css","_templateObject3","time","StyledCellContent","_templateObject4","StyledContainer","_templateObject5","TimeContainer","_templateObject6","Cell","_useState","useState","Object","objectSpread","milliseconds","minutes","seconds","_useState2$","slicedToArray","placeholder","useCallback","react_default","a","createElement","react_appear_in_default","CellContainer_templateObject","CellContainer","CellContainer_StyledContainer","toConsumableArray","Array","map","_","i","CellContainer_Cell_Cell","key","InfoContainer_templateObject","H1","InfoContainer_templateObject2","H2","InfoContainer_templateObject3","Content","InfoContainer_templateObject4","Ol","InfoContainer_templateObject5","Code","InfoContainer_templateObject6","InfoContainer","InfoContainer_StyledContainer","GlobalStyle","createGlobalStyle","App_templateObject","App","styled_components_browser_esm","theme","react","src_InfoContainer_InfoContainer","src_CellContainer_CellContainer","ReactDOM","render","src_App_App","document","getElementById"],"mappings":"8NACaA,EAAuB,SAACC,EAAaC,GAAd,OAClCC,KAAKC,MAAMD,KAAKE,SAAWH,GAAOD,0/BCIpC,IA2BMK,EAAOC,YAAHC,KAUJC,EAAwBC,YAAO,MAAPA,CAAHC,IACX,SAAAC,GAAK,OAAIC,YAAJC,IAAUR,EAAQM,EAAMG,QAOvCC,EAAoBN,YAAO,MAAPA,CAAHO,KAUjBC,EAAkBR,YAAO,MAAPA,CAAHS,KAafC,EAAgBV,YAAO,MAAPA,CAAHW,KAKJC,EAzEF,WAAM,IAAAC,EAC4BC,mBAASC,OAAAC,EAAA,EAAAD,CAAA,GDHf,CACvCE,aAAc3B,EAAqB,GAAI,KACvC4B,QAAS5B,EAAqB,EAAG,GACjC6B,QAAS7B,EAAqB,EAAG,OCDhB8B,EAAAL,OAAAM,EAAA,EAAAN,CAAAF,EAAA,MACRK,EADQE,EACRF,QAASC,EADDC,EACCD,QAASF,EADVG,EACUH,aAErBK,EAAcC,sBAClB,SAAClB,GAAD,OACAmB,EAAAC,EAAAC,cAAC3B,EAAD,CAAuBM,KAAMA,KAE7B,IAGF,OACEmB,EAAAC,EAAAC,cAAClB,EAAD,KACEgB,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEP,QAASA,EACTC,QAASA,EACTF,aAAcA,EACdK,YAAaA,GAEbE,EAAAC,EAAAC,cAACpB,EAAD,KACEkB,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAChB,EAAD,KAAgBQ,EAAhB,MAA4BC,EAA5B,MAAwCF,EAAxC,yRCtBV,IAMMT,EAAkBR,YAAO,MAAPA,CAAH4B,KAaNC,EAnBO,kBAClBL,EAAAC,EAAAC,cAACI,EAAD,KACGf,OAAAgB,EAAA,EAAAhB,CAAIiB,MAAM,MAAMC,IAAI,SAACC,EAAGC,GAAJ,OAAUX,EAAAC,EAAAC,cAACU,EAAD,CAAMC,IAAKF,y4CCHhD,IA8BM3B,EAAkBR,YAAO,UAAPA,CAAHsC,KAwBfC,EAAKvC,YAAO,KAAPA,CAAHwC,KAMFC,EAAKzC,YAAO,KAAPA,CAAH0C,KAOFC,EAAU3C,YAAO,UAAPA,CAAH4C,KAKPC,EAAK7C,YAAO,KAAPA,CAAH8C,KAUFC,EAAO/C,YAAO,MAAPA,CAAHgD,KAUKC,EA5FO,kBAClBzB,EAAAC,EAAAC,cAACwB,EAAD,KACI1B,EAAAC,EAAAC,cAACa,EAAD,wBACAf,EAAAC,EAAAC,cAACe,EAAD,4DACAjB,EAAAC,EAAAC,cAACiB,EAAD,KACInB,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAAA,oBAEIF,EAAAC,EAAAC,cAACqB,EAAD,qCAEJvB,EAAAC,EAAAC,cAAA,gBAEIF,EAAAC,EAAAC,cAACqB,EAAD,qeCTpB,IAAMI,EAAcC,YAAHC,KAuBFC,EAVH,kBACV9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAeC,MAAO,IACpBhC,EAAAC,EAAAC,cAAC+B,EAAA,SAAD,KACEjC,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAACiC,EAAD,SCnBNC,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e0b5a07f.chunk.js","sourcesContent":["\nexport const generateRandomNumber = (min: number, max: number) =>\n  Math.floor(Math.random() * max) + min ;\n\nexport const generateRandomTime = () => ({\n  milliseconds: generateRandomNumber(10, 100),\n  minutes: generateRandomNumber(0, 2),\n  seconds: generateRandomNumber(5, 30),\n});\n","import React, { useCallback, useState } from 'react';\nimport AppearIn from 'react-appear-in';\nimport styled, { css, keyframes } from 'styled-components';\n\nimport { generateRandomTime } from './random';\n\nconst Cell = () => {\n  const [{ minutes, seconds, milliseconds }] = useState({ ...generateRandomTime() });\n\n  const placeholder = useCallback(\n    (time: number) => (\n    <StyledCellPlaceholder time={time} />\n  ),\n    [],\n  );\n\n  return (\n    <StyledContainer>\n      <AppearIn\n        minutes={minutes}\n        seconds={seconds}\n        milliseconds={milliseconds}\n        placeholder={placeholder}\n      >\n        <StyledCellContent>\n          <div>I appeared after</div>\n          <TimeContainer>{minutes}m. {seconds}s. {milliseconds}ms.</TimeContainer>\n        </StyledCellContent>\n      </AppearIn>\n    </StyledContainer>\n  );\n};\n\nconst grow = keyframes`\n  from {\n    width: 0;\n  }\n\n  to {\n    width: 100%;\n  }\n`;\n\nconst StyledCellPlaceholder = styled('div')<{time: number}>`\n  animation: ${ props => css`${grow} ${props.time}ms linear;`}\n  background-color: #efefef;\n  border-radius: 10px;\n  display: flex;\n  flex-grow: 1;\n`;\n\nconst StyledCellContent = styled('div')`\n  background-color: #efefef;\n  border-radius: 10px;\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst StyledContainer = styled('div')`\n  background-color: darkgrey;\n  color: #ccc;\n  width: 150px;\n  height: 100px;\n  margin: 5px;\n  padding: 5px;\n  border-radius: 10px;\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n`;\n\nconst TimeContainer = styled('div')`\n  margin-top: 5px;\n  color: #aaa;\n`;\n\nexport default Cell;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Cell from './Cell';\n\nconst CellContainer = () => (\n    <StyledContainer>\n      {[...Array(100)].map((_, i) => <Cell key={i} />)}\n    </StyledContainer>\n  );\n\nconst StyledContainer = styled('div')`\n  position: absolute;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  background-color: grey;\n  z-index: 1;\n\n  @media (max-width: 768px) {\n    position: static;\n  }\n`;\n\nexport default CellContainer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst InfoContainer = () => (\n    <StyledContainer>\n        <H1>React Appear In</H1>\n        <H2>Make react components appear sometime in the future</H2>\n        <Content>\n            <Ol>\n                <li>\n                    Install\n                    <Code>npm install react-appear-in</Code>\n                </li>\n                <li>\n                    Use\n                    <Code>{\n                        `import AppearIn from 'react-appear-in';\n\n\nconst MyAwesomeComponent = () => (\n    <AppearIn minutes={1} seconds={20} milliseconds={10}>\n        Hello in 1 minute, 20 seconds and 10 milliseconds\n    </AppearIn>\n);\n                        `\n                    }\n                    </Code>\n                </li>\n            </Ol>\n        </Content>\n    </StyledContainer>\n);\n\nconst StyledContainer = styled('article')`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  width: 50%;\n  min-height: 50%;\n  background-color: #333;\n  color: #efefef;\n  padding: 16px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 10px #333;\n  z-index: 100;\n\n  @media (max-width: 768px) {\n    position: static;\n    transform: none;\n    min-height: auto;\n    width: auto;\n    border-radius: 0;\n    box-shadow: none;\n  }\n`;\n\nconst H1 = styled('h1')`\n    font-size: 2rem;\n    font-family: 'B612', sans-serif;\n    margin: 0;\n`;\n\nconst H2 = styled('h2')`\n    font-size: 1rem;\n    font-family: 'B612 Mono', monospace;\n    margin: 16px 0 0 0;\n    color: #aaa;\n`;\n\nconst Content = styled('section')`\n    margin-top: 32px;\n    padding: 16px;\n`;\n\nconst Ol = styled('ol')`\n    padding: 0;\n    max-width: 70%;\n    font-family: 'B612',sans-serif;\n\n    @media (max-width: 768px) {\n        max-width: none;\n    }\n`;\n\nconst Code = styled('pre')`\n    background-color: #aaa;\n    color: #000;\n    padding: 16px;\n    border-radius: 2px;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    text-align: justify;\n`;\n\nexport default InfoContainer;\n","import React, { Fragment } from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\n\nimport CellContainer from '../CellContainer';\nimport InfoContainer from '../InfoContainer';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    padding: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  body {\n    font-family: Arial, Helvetica, sans-serif;\n  }\n`;\n\nconst App = () => (\n  <ThemeProvider theme={{}}>\n    <Fragment>\n      <GlobalStyle />\n      <InfoContainer />\n      <CellContainer />\n    </Fragment>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}